name: Создание приложения

on:
  push:
    branches:
      - main

permissions:
  contents: write
  deployments: write
  id-token: write

jobs:
  get_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Получить исходный код
        uses: actions/checkout@v4

      - name: Извлечь версию из setup.py
        id: get_version
        run: |
          version=$(grep -E '^version=' setup.py | cut -d '"' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Показать версию
        run: |
          echo "Извлечённая версия: '${{ steps.get_version.outputs.version }}'"
  build:
    needs: get_version
    runs-on: windows-latest
    outputs:
      tag: ${{ steps.create_tag.outputs.tag }} # Передача тега в другие job
    steps:
      - name: Получить исходный код
        uses: actions/checkout@v4

      - name: Настроить Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Установить зависимости
        run: |
          pip install --upgrade pip
          pip install cx-Freeze

      - name: Установить дополнительные зависимости
        run: |
          pip install -r requirements.txt

      - name: Собрать установщик MSI
        run: |
          python setup.py bdist_msi

      - name: Определить версию
        id: vars
        run: |
          echo "version=${{ needs.get_version.outputs.version }}" >> $GITHUB_ENV

      - name: Добавить тег к коммиту с версией
        id: create_tag
        run: |
          $version = "${{ needs.get_version.outputs.version }}"
          $TAG = "v$version"
          git tag "$TAG"
          git push origin "$TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Загрузить артефакт
        uses: actions/upload-artifact@v4
        with:
          name: GameSense-installer
          path: dist/

  release:
    needs: [build]
    runs-on: windows-latest
    steps:
      - name: Скачать артефакт
        uses: actions/download-artifact@v4
        with:
          name: GameSense-installer
          path: dist

      - name: Получить версию из тега
        id: get_tag
        run: |
          $TAG = "${{ needs.build.outputs.tag }}"
          $VERSION = $TAG -replace 'v', '' # Убрать 'v' для отображения версии
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Отладка тега
        run: |
          echo "Тег из build: ${{ needs.build.outputs.tag }}"
      - name: Проверить наличие файла
        run: |
          ls dist/
      - name: Проверить содержимое dist/
        run: |
          Get-ChildItem dist/ -Recurse | Format-List Name,Length

      - name: Создать релиз и загрузить артефакт
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.build.outputs.tag }} # Используем переданный тег
          name: Релиз ${{ steps.get_tag.outputs.version }}
          draft: false
          prerelease: false
          artifacts: dist/GameSense-${{ steps.get_tag.outputs.version }}-win_amd64.msi
          token: ${{ secrets.GITHUB_TOKEN }}